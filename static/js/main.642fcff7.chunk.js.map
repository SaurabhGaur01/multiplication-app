{"version":3,"sources":["components/HeaderApp/HeaderApp.jsx","utils/index.js","components/ContentApp/ContentApp.jsx","components/App.jsx","index.js"],"names":["HeaderApp","className","getDynamicArrayOfGivenSize","Array","keys","ContentApp","React","useState","activeIndexes","setActiveIndexes","onClickHandler","index","number","getAllIndexes","filter","item","map","includes","id","onClick","App","Fragment","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sMAQeA,EANG,kBACd,wBAAQC,UAAU,YAAlB,SACI,oBAAIA,UAAU,iCAAd,mC,cCIKC,EAA6B,8BAAWC,MARlC,KAQoDC,SC0BxDC,EA/BI,WACf,MAA0CC,IAAMC,SAAS,IAAzD,mBAAOC,EAAP,KAAsBC,EAAtB,KAEMC,EAAiB,SAACC,GACpB,IDJ8BC,ECIxBC,GDJwBD,ECIeD,EAAM,EDHvDT,IAA6BY,QAAO,SAAAC,GAAI,OAAIA,EAAOH,IAAW,MCI1DH,EAAiBI,IAGrB,OACI,kCACI,oBAAIZ,UAAU,OAAd,SAEQC,IAA6Bc,KAAI,SAAAD,GAC7B,IAAMd,EAAYO,EAAcS,SAASF,EAAK,GAAK,yCAA2C,mBAC9F,OACI,oBACIG,GAAE,oBAAeH,GAEjBI,QAAS,kBAAMT,EAAeK,IAC9Bd,UAAWA,EAJf,SAMKc,EAAO,GANZ,oBAEsBA,YCTnCK,EAPH,kBACR,eAAC,IAAMC,SAAP,WACI,cAAC,EAAD,IACA,cAAC,EAAD,Q,YCDRC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.642fcff7.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst HeaderApp = () => (\r\n    <header className=\"appHeader\">\r\n        <h3 className=\"title text-white pl-3 pt- pb-2\">Multiplication App</h3>\r\n    </header>\r\n)\r\n\r\nexport default HeaderApp;","const MAX_NUMBER = 144;\r\n\r\n// will return all divisible numbers of the given number whenever called\r\nexport const getAllDivisibleNumbers = number => (\r\n    getDynamicArrayOfGivenSize().filter(item => item % number === 0)\r\n)    \r\n\r\n// will return the dynamic array of the given size whenever called\r\nexport const getDynamicArrayOfGivenSize = () =>  [...Array(MAX_NUMBER).keys()];\r\n","import React from 'react';\r\nimport { getAllDivisibleNumbers, getDynamicArrayOfGivenSize } from '../../utils'\r\n\r\nconst ContentApp = () => {\r\n    const [activeIndexes, setActiveIndexes] = React.useState([]);\r\n\r\n    const onClickHandler = (index) => {\r\n        const getAllIndexes = getAllDivisibleNumbers(index+1); \r\n        setActiveIndexes(getAllIndexes);\r\n    }\r\n\r\n    return (\r\n        <section>\r\n            <ul className=\"list\">\r\n                {\r\n                    getDynamicArrayOfGivenSize().map(item =>{\r\n                        const className = activeIndexes.includes(item+1) ? 'border border-success list-item active' : 'border list-item'; \r\n                        return (\r\n                            <li \r\n                                id={`list-item-${item}`}\r\n                                key={`list-item-${item}`}\r\n                                onClick={() => onClickHandler(item)}\r\n                                className={className}\r\n                            >\r\n                                {item + 1}\r\n                            </li>\r\n                        )\r\n                    })\r\n                }\r\n            </ul>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default ContentApp","import React from 'react';\r\nimport HeaderApp from './HeaderApp/HeaderApp';\r\nimport ContentApp from './ContentApp/ContentApp';\r\n\r\nconst App = () => (\r\n    <React.Fragment>\r\n        <HeaderApp />\r\n        <ContentApp />\r\n    </React.Fragment>\r\n)\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './components/app.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}